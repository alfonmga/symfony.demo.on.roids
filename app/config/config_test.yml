imports:
    - { resource: config_dev.yml }

framework:
    test: ~
    session:
        storage_id: session.storage.mock_file
    profiler:
        collect: false

web_profiler:
    toolbar: false
    intercept_redirects: false

swiftmailer:
    disable_delivery: true

# It's recommended to use a separate database for tests. This allows to have a
# fixed and known set of data fixtures, it simplifies the code of tests and it
# makes them more robust.
# In this case we just need to define a different path for the application database.
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        path: "%kernel.root_dir%/data/blog_test.sqlite"

# this configuration simplifies testing URLs protected by the security mechanism
# See http://symfony.com/doc/current/cookbook/testing/http_authentication.html
security:
    firewalls:
        secured_area:
            http_basic: ~

liip_functional_test:
    cache_sqlite_db: true

old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     5672
            user:     guest
            password: guest
            vhost:    '/'
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
    producers:
        generate_pdf:
            connection:       default
            exchange_options: {name: 'generate-pdf_test', type: direct}
    consumers:
        generate_pdf:
            connection:       default
            exchange_options: {name: 'generate-pdf_test', type: direct}
            queue_options:    {name: 'generate-pdf_test'}
            callback:         rabbitmq_pdf_generator_consumer